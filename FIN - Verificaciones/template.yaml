AWSTemplateFormatVersion : '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31

# Parameters:
#   BuketName: 
#     Type: String
Parameters:
  Project: 
    Type: String

Description: my template
Resources:
  MyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: new-role-lambda-pls
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: my-lambda-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
  MyLambda1:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: my-lambda-3
      Runtime: python3.6
      CodeUri: ./build
      Handler: lambda1.handler
      Timeout: 30
      MemorySize: 500
      Role: !GetAtt MyLambdaRole.Arn
      Environment:
         Variables:
          MY_NAME : mauri
  
  MyLambda2:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: my-lambda-4
      FunctionName: !Join [ "-", [!Ref Project, "lambda-1" ] ]  
      Runtime: python3.6
      CodeUri: ./build
      Handler: lambda2.handler
      Role: !GetAtt MyLambdaRole.Arn
Outputs:
  RoleARN:
    Value: !GetAtt MyLambdaRole.Arn